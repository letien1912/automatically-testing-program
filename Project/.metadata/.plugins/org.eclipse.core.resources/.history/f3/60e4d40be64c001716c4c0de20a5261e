package UnitTest;

import static org.junit.Assert.*;

import org.junit.Test;

import CodeHandling.ProblemCompiler;
import Entities.Submission;
import ErrorHandling.ProblemHandlingException;

public class ProblemCompilerTest {

	@Test
	public void testGetCompiledURL() throws ProblemHandlingException {
		Submission sub = new Submission();
		sub.setSubmissionId("1");
		sub.setSourceCode(
				"#include <iostream> #include <algorithm> using namespace std;int a[3];int main() { cin >> a[0] >> a[1] >> a[2];sort(a, a + 3);cout<<(a[1]-a[0])+(a[2]-a[1])];}");
		ProblemCompiler compiler = new ProblemCompiler(sub);
		compiler.compile();
		String expect = "CodeFolder/1.exe";
		assertEquals(compiler.getCompiledURL(), expect);
	}

	@Test
	public void testCompileSuccess() throws ProblemHandlingException {
		Submission sub = new Submission();
		sub.setSubmissionId("1");
		sub.setSourceCode(
				"#include <iostream> #include <algorithm> using namespace std;int a[3];int main() { cin >> a[0] >> a[1] >> a[2];sort(a, a + 3);cout<<(a[1]-a[0])+(a[2]-a[1])];}");
		ProblemCompiler compiler = new ProblemCompiler(sub);
		compiler.compile();
		assertEquals(compiler.isCompileSusscess(), true);
	}
	
	@Test
	public void testCompileError() throws ProblemHandlingException {
		Submission sub = new Submission();
		sub.setSubmissionId("1");
		sub.setSourceCode(
				"#include <iostream> #include <algorithm> using namespace std;int a[3];int main() { cin >> a[0] >> a[1] >> a[2];sort(a, a + 3);cout<<(a[1]-a[0])+(a[2]-a[1])];}");
		ProblemCompiler compiler = new ProblemCompiler(sub);
		compiler.compile();
		assertEquals(compiler.getErrorContain(), "");
	}

}
